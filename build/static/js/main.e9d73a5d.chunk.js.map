{"version":3,"sources":["data/command-outputs.js","components/command-line/CommandLine.js","components/output/Output.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","bio","contact","ls","help","social","resume","CommandLine","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","indicatorClass","props","indicator","hide","react_default","a","createElement","className","command","Component","Output","text","dangerouslySetInnerHTML","__html","outputs","require","App","_this","initLoadScreens","commands","addOutput","clear","setState","history","pwd","default","state","window","addEventListener","event","key","toLowerCase","string","substr","length","runCommand","CommandLine_CommandLine","html","previousState","toConsumableArray","concat","Output_Output","Date","getTime","cmd","scrollTo","document","body","scrollHeight","_this2","currentLine","loading","setInterval","clearInterval","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9d73a5d.chunk.js","sourcesContent":["export default {\n  bio: `\n        Since my first encounter with a computer in 1998, I’ve been passionate about technology. The creative freedom invoked my love of programming and over the past decade of my career in the software development industry has helped me help dozens of businesses produce online solutions, as well as growing teams develop softwares as services.\n        <br /><br />\n        In 2010 I took my first position with Imagine Marketing, where I remotely developed and managed online stores. Then in 2012 I started helping the Wysong team create interactive JavaScript applications. When I moved to Salt Lake City in 2015 I worked with Diib on a predictive analytics service before I took a remote position with WaveOrtho for two years writing software components and PHP FileMaker Server APIs. In 2017, Deseret News offered me a position developing interactives for articles and a CRUD dashboard to manage almanac content.\n        <br /><br />\n        Since then I’ve worked with dozens of local and international businesses to produce professional marketing materials and sophisticated web based technologies. I’ve saved my clients countless hours by programming automation scripts, increased workspace productivity by developing Chrome Extensions, and helped create secure dashboards with tools to manage large realtime databases holding encrypted information.\n        <br /><br />\n        Please have a look at my resume to learn more about the type of work that I’ve done. I am pleased to have worked with all of these wonderful professionals and will offer the same level of dedication for your project as well.\n      `,\n  contact: `\n        <span class=\"blue\">email: </span>jadeallencook@gmail.com<br />\n        <span class=\"blue\">phone: </span>(510) 255-5233\n      `,\n  ls: `<span class=\"red\">Umm, there's nothing to see here...`,\n  help: `\n        <span>Type one of the commands below and then press <b>[ENTER]:</b></span><br />\n        <span class=\"yellow bold\">\n          <span class=\"item\">bio</span>\n          <span class=\"item\">clear</span>\n          <span class=\"item\">contact</span>\n          <span class=\"item\">help</span>\n          <span class=\"item\">resume</span>\n          <span class=\"item\">social</span>\n        </span>\n      `,\n  social: `\n    <i>These links are clickable:</i><br />\n    <a href=\"https://www.github.com/jadeallencook\" target=\"_blank\" class=\"item blue\">github</a>\n    <a href=\"https://www.instagram.com/jadeallencook\" target=\"_blank\" class=\"item blue\">instagram</a>\n    <a href=\"https://www.facebook.com/jadeallencook\" target=\"_blank\" class=\"item blue\">facebook</a>\n    <a href=\"https://www.twitter.com/jadeallencook\" target=\"_blank\" class=\"item blue\">twitter</a>\n  `,\n  resume: `\n      <span class=\"blue bold\">Deseret News & KSL</span> (October 2017 - PRESENT)<br /><br />\n      <i>Worked with a SCRUM team via Slack to manage a Symphony site using GitHub and InVision. Developed React apps embedded with oEmbed and an Angular CRUD interface with Firebase. Created Chrome Extensions and Node automation processes to ease employee workflow.</i>\n      <br /><br />\n      <span class=\"blue bold\">WaveOrtho</span> (September 2015 - May 2017)<br /><br />\n      <i>Remotely collaborated with an Agile team using Slack/GitHub to build JavaScript components and PHP FileMaker Server APIs. Developed a POS using Stripe, base64 image editor, and dozens of other interactive tools.</i>\n      <br /><br />\n      <span class=\"blue bold\">Diib</span> (May 2015 - September 2015)<br /><br />\n      <i>Helped develop a predictive analytics service and user authenticated dashboard encrypted with salted SHA-256 hashing on a LAMP stack. Built onboarding funnels, generated a SEO friendly WordPress blog, and designed wireframes using InVision.</i>\n      <br /><br />\n      <span class=\"blue bold\">Peacock Park Design​</span> (September 2014 - PRESENT)<br /><br />\n      <i>Developed an Angular CRUD dashboard for online store using Firebase to handle data/auth. Remotely collaborated with team using Slack to communicate and managed the codebase with GitHub. Used Adobe PhotoShop/Illustrator to design graphics and wireframes.</i>\n  `\n}\n","import React, { Component } from 'react';\n\nexport default class CommandLine extends Component {\n  render() {\n    const indicatorClass = (this.props.indicator) ? 'indicator' : null;\n    if (!this.props.hide) {\n        return (\n            <p>\n                <span className=\"green\">root@jadeallencook$ </span>\n                <span>{ this.props.command }</span>\n                <span className={indicatorClass}></span>\n            </p>\n        );\n    } else {\n        return (\n            <p>\n                <span className={indicatorClass}></span>\n            </p>\n        );\n    }\n  }\n\n  constructor() {\n      super();\n  }\n}\n","import React, { Component } from 'react';\nimport './Output.css';\n\nexport default class Output extends Component {\n  render() {\n      if (this.props.text) {\n        return (\n            <p className=\"output-line\" dangerouslySetInnerHTML={{__html: this.props.text}}></p>\n        );\n      } else {\n          return (<p><br /></p>);\n      }\n  }\n\n  constructor() {\n      super();\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport CommandLine from './components/command-line/CommandLine';\nimport Output from './components/output/Output';\nvar outputs = require('./data/command-outputs');\n\nclass App extends Component {\n\n  initLoadScreens = [\n    '<img class=\"logo\" src=\"./assets/images/logo.png\" />',\n    '<b>Web Terminal</b> v1.0.0',\n    '<i>Built with React & NPM</i>'\n  ];\n\n  commands = {\n    bio: () => {\n      this.addOutput(outputs.bio);\n    },\n    clear: () => {\n      this.setState({history: []});\n      this.commands.help();\n    },\n    contact: () => {\n      this.addOutput(outputs.contact);\n    },\n    ls: () => {\n      this.addOutput(outputs.ls);\n    },\n    pwd: () => {\n      this.addOutput(outputs.ls);\n    },\n    help: () => {\n      this.addOutput(outputs.help);\n    },\n    social: () => {\n      this.addOutput(outputs.social);\n    },\n    resume: () => {\n      this.addOutput(outputs.resume);\n    },\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.history}\n        <CommandLine hide={this.state.hide} command={this.state.command} indicator={true} key=\"current\" />\n      </div>\n    );\n  }\n\n  addOutput(html) {\n    this.setState(previousState => ({\n      history: [...previousState.history, <Output text={html} key={new Date().getTime()} />],\n    }));\n  }\n\n  runCommand(cmd) {\n    this.setState(previousState => ({\n      history: [...previousState.history, <CommandLine command={cmd} indicator={false} key={new Date().getTime()} />],\n      command: ''\n    }));\n    if (!this.commands[cmd]) this.commands.help();\n    else this.commands[cmd]();\n    this.setState({hide: false});\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  constructor() {\n    super();\n    outputs = outputs.default;\n    this.state = {\n      command: '',\n      history: [],\n      hide: true\n    };\n    window.addEventListener('keydown', event => {\n      const key = event.key.toLowerCase();\n      let string = this.state.command;\n      if (key === 'backspace') {\n        string = string.substr(0, string.length - 1);\n        this.setState({\n          command: string\n        });\n      } else if (key === 'enter') {\n        this.setState({\n          hide: true\n        });\n        this.runCommand(string);\n      } else if (key.length === 1) {\n        string += key;\n        this.setState({\n          command: string\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    let currentLine = 0;\n    const loading = setInterval(() => {\n      this.addOutput(this.initLoadScreens[currentLine]);\n      currentLine++;\n      if (currentLine === this.initLoadScreens.length) {\n        this.commands.help();\n        clearInterval(loading);\n        this.setState({ hide: false });\n      }\n    }, 300);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}